// Menu mobile (responsive)
document.addEventListener('DOMContentLoaded', function() {
    const menuToggle = document.createElement('div');
    menuToggle.className = 'menu-toggle';
    menuToggle.innerHTML = '‚ò∞ Menu';
    document.querySelector('header').appendChild(menuToggle);
    
    menuToggle.addEventListener('click', function() {
        document.querySelector('nav ul').classList.toggle('active');
    });
    
    // X·ª≠ l√Ω form li√™n h·ªá
    const contactForm = document.getElementById('contactForm');
    if (contactForm) {
        contactForm.addEventListener('submit', function(e) {
            e.preventDefault();
            alert('C·∫£m ∆°n b·∫°n ƒë√£ li√™n h·ªá. Ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi s·ªõm nh·∫•t!');
            contactForm.reset();
        });
    }
    
    // Load d·ªØ li·ªáu blog t·ª´ API (n·∫øu c√≥)
    // loadBlogPosts();
});

// function loadBlogPosts() {
//     fetch('API_URL')
//         .
// Music Player Functionality
document.addEventListener('DOMContentLoaded', function() {
    const musicPlayer = document.getElementById('bgMusic');
    const musicToggle = document.getElementById('musicToggle');
    
    // Ki·ªÉm tra tr·∫°ng th√°i nh·∫°c t·ª´ localStorage
    const isMusicOn = localStorage.getItem('musicOn') === 'true';
    
    if (isMusicOn) {
        musicPlayer.play().catch(e => console.log("Auto-play prevented:", e));
        musicToggle.classList.add('playing');
        musicToggle.textContent = 'T·∫Øt nh·∫°c';
    }
    
    // X·ª≠ l√Ω s·ª± ki·ªán click n√∫t nh·∫°c
    musicToggle.addEventListener('click', function() {
        if (musicPlayer.paused) {
            musicPlayer.play();
            this.classList.add('playing');
            this.textContent = 'T·∫Øt nh·∫°c';
            localStorage.setItem('musicOn', 'true');
        } else {
            musicPlayer.pause();
            this.classList.remove('playing');
            this.textContent = 'B·∫≠t nh·∫°c';
            localStorage.setItem('musicOn', 'false');
        }
    });
    
    // T·ª± ƒë·ªông t·∫Øt nh·∫°c khi tab kh√¥ng active
    document.addEventListener('visibilitychange', function() {
        if (document.hidden) {
            musicPlayer.pause();
        } else if (localStorage.getItem('musicOn') === 'true') {
            musicPlayer.play().catch(e => console.log("Auto-play prevented:", e));
        }
    });
});
// M·ªü r·ªông t√≠nh nƒÉng tr√¨nh ph√°t nh·∫°c
const volumeSlider = document.getElementById('volumeSlider');
const songSelector = document.getElementById('songSelector');

// ƒêi·ªÅu ch·ªânh √¢m l∆∞·ª£ng
volumeSlider.addEventListener('input', function() {
    musicPlayer.volume = this.value;
    localStorage.setItem('musicVolume', this.value);
});

// Kh√¥i ph·ª•c √¢m l∆∞·ª£ng ƒë√£ l∆∞u
const savedVolume = localStorage.getItem('musicVolume');
if (savedVolume) {
    musicPlayer.volume = savedVolume;
    volumeSlider.value = savedVolume;
}

// Thay ƒë·ªïi b√†i h√°t
songSelector.addEventListener('change', function() {
    musicPlayer.src = this.value;
    if (!musicPlayer.paused) {
        musicPlayer.play();
    }
    localStorage.setItem('selectedSong', this.value);
});

// Kh√¥i ph·ª•c b√†i h√°t ƒë√£ ch·ªçn
const savedSong = localStorage.getItem('selectedSong');
if (savedSong) {
    songSelector.value = savedSong;
    musicPlayer.src = savedSong;
}
document.querySelectorAll('.home-fab, .footer-home-link').forEach(link => {
    link.addEventListener('click', function(e) {
        // L∆∞u v·ªã tr√≠ scroll hi·ªán t·∫°i
        sessionStorage.setItem('scrollPos', window.scrollY);
    });
});

// Khi trang ch·ªß load
window.addEventListener('load', function() {
    const scrollPos = sessionStorage.getItem('scrollPos');
    if (scrollPos) {
        window.scrollTo(0, scrollPos);
        sessionStorage.removeItem('scrollPos');
    }
});
// Hi·ªáu ·ª©ng menu mobile
document.querySelector('.menu-toggle').addEventListener('click', function() {
    document.querySelector('nav ul').classList.toggle('active');
});

// Hi·ªáu ·ª©ng scroll
window.addEventListener('scroll', function() {
    const header = document.querySelector('.fun-header');
    if (window.scrollY > 50) {
        header.style.background = 'rgba(255,255,255,0.95)';
        header.style.backdropFilter = 'blur(10px)';
    } else {
        header.style.background = 'white';
        header.style.backdropFilter = 'none';
    }
});

// Hi·ªáu ·ª©ng hover cho service items
document.querySelectorAll('.service-item').forEach(item => {
    item.addEventListener('mouseenter', function() {
        this.querySelector('.service-icon').style.transform = 'rotate(15deg) scale(1.1)';
    });
    item.addEventListener('mouseleave', function() {
        this.querySelector('.service-icon').style.transform = 'rotate(0) scale(1)';
    });
});
// Hi·ªáu ·ª©ng scroll cho decor
window.addEventListener('scroll', function() {
    const scrollY = window.scrollY;
    const cherry1 = document.querySelector('.cherry-1');
    const cherry2 = document.querySelector('.cherry-2');
    
    cherry1.style.transform = `translateY(${scrollY * 0.1}px) rotate(${scrollY * 0.1}deg)`;
    cherry2.style.transform = `translateY(${scrollY * 0.15}px) rotate(${-scrollY * 0.1}deg)`;
});

// Hi·ªáu ·ª©ng typewriter cho banner
function typeWriter(text, element, speed) {
    let i = 0;
    function typing() {
        if (i < text.length) {
            element.textContent += text.charAt(i);
            i++;
            setTimeout(typing, speed);
        }
    }
    typing();
}

const bannerText = document.querySelector('.banner-text span:nth-child(2)');
if (bannerText) {
    const text = bannerText.textContent;
    bannerText.textContent = '';
    typeWriter(text, bannerText, 100);
}
// Ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p
const currentUser = JSON.parse(localStorage.getItem('nhuNailsUser')) || 
                   JSON.parse(sessionStorage.getItem('nhuNailsUser'));

if (currentUser) {
    // Thay ƒë·ªïi navigation
    const nav = document.querySelector('nav ul');
    const userLi = document.createElement('li');
    userLi.innerHTML = `
        <a href="#" class="user-menu">
            Xin ch√†o, ${currentUser.name.split(' ')[0]}
            <ul class="submenu">
                <li><a href="user/profile.html">T√†i kho·∫£n</a></li>
                <li><a href="#" id="logoutUser">ƒêƒÉng xu·∫•t</a></li>
            </ul>
        </a>
    `;
    nav.appendChild(userLi);
    
    // X·ª≠ l√Ω ƒëƒÉng xu·∫•t
    document.getElementById('logoutUser')?.addEventListener('click', function(e) {
        e.preventDefault();
        localStorage.removeItem('nhuNailsUser');
        sessionStorage.removeItem('nhuNailsUser');
        window.location.reload();
    });
}
// T·∫°o hi·ªáu ·ª©ng tr√°i tim bay
function createFloatingHearts() {
    const container = document.querySelector('.moments-section');
    if (!container) return;
    
    const heartsContainer = document.createElement('div');
    heartsContainer.className = 'floating-hearts';
    container.appendChild(heartsContainer);
    
    for (let i = 0; i < 15; i++) {
        const heart = document.createElement('div');
        heart.className = 'heart';
        heart.innerHTML = 'üíñ';
        heart.style.left = `${Math.random() * 100}%`;
        heart.style.animationDelay = `${Math.random() * 5}s`;
        heart.style.fontSize = `${Math.random() * 1 + 1}rem`;
        heartsContainer.appendChild(heart);
    }
}

// Hi·ªáu ·ª©ng hover h√¨nh ·∫£nh
document.querySelectorAll('.moment-item').forEach(item => {
    item.addEventListener('mouseenter', function() {
        const icons = this.querySelector('.moment-icons');
        icons.innerHTML = '';
        
        // T·∫°o icon bay l√™n khi hover
        for (let i = 0; i < 3; i++) {
            const icon = document.createElement('span');
            icon.innerHTML = ['üíñ', '‚ú®', 'üåü'][Math.floor(Math.random() * 3)];
            icon.style.animation = `fly-up ${1 + Math.random()}s ease-out forwards`;
            icons.appendChild(icon);
        }
    });
});

// Th√™m v√†o khi trang load
document.addEventListener('DOMContentLoaded', function() {
    createFloatingHearts();
    
    // Th√™m font Dancing Script
    const link = document.createElement('link');
    link.href = 'https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;700&display=swap';
    link.rel = 'stylesheet';
    document.head.appendChild(link);
});
// Mobile menu toggle
document.addEventListener('DOMContentLoaded', function() {
    const menuBtn = document.querySelector('.mobile-menu-btn');
    const mainNav = document.querySelector('.main-nav');
    
    menuBtn.addEventListener('click', function() {
        mainNav.style.display = mainNav.style.display === 'block' ? 'none' : 'block';
    });
    
    // Close menu when clicking outside
    document.addEventListener('click', function(e) {
        if (!e.target.closest('.header-container') && window.innerWidth <= 768) {
            mainNav.style.display = 'none';
        }
    });
    
    // Adjust on window resize
    window.addEventListener('resize', function() {
        if (window.innerWidth > 768) {
            mainNav.style.display = 'flex';
        } else {
            mainNav.style.display = 'none';
        }
    });
});
// Hi·ªáu ·ª©ng khi scroll ƒë·∫øn gallery
document.addEventListener('DOMContentLoaded', function() {
    const gallery = document.querySelector('.gallery-grid');
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.querySelectorAll('.gallery-item').forEach((item, index) => {
                    setTimeout(() => {
                        item.style.opacity = '1';
                        item.style.transform = 'translateY(0)';
                    }, index * 150);
                });
            }
        });
    }, { threshold: 0.1 });
    
    if (gallery) {
        observer.observe(gallery);
        
        // Kh·ªüi t·∫°o tr·∫°ng th√°i ban ƒë·∫ßu
        document.querySelectorAll('.gallery-item').forEach(item => {
            item.style.opacity = '0';
            item.style.transform = 'translateY(20px)';
            item.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
        });
    }
});
// L∆∞u/L·∫•y th√¥ng tin ng∆∞·ªùi d√πng
function checkLoginStatus() {
    // Ki·ªÉm tra localStorage ho·∫∑c sessionStorage
    const user = JSON.parse(localStorage.getItem('nhuNailsUser')) || 
                 JSON.parse(sessionStorage.getItem('nhuNailsUser'));
    
    if (user) {
        // Hi·ªÉn th·ªã t√™n ng∆∞·ªùi d√πng
        document.querySelectorAll('.user-name').forEach(el => {
            el.textContent = user.name.split(' ')[0]; // Ch·ªâ l·∫•y t√™n ƒë·∫ßu
        });
    } else {
        // ·∫®n ph·∫ßn ch√†o m·ª´ng n·∫øu ch∆∞a ƒëƒÉng nh·∫≠p
        document.querySelector('.user-greeting').style.display = 'none';
    }
}

// X·ª≠ l√Ω ƒëƒÉng xu·∫•t
document.getElementById('logoutBtn')?.addEventListener('click', function(e) {
    e.preventDefault();
    
    // X√≥a th√¥ng tin ƒëƒÉng nh·∫≠p
    localStorage.removeItem('nhuNailsUser');
    sessionStorage.removeItem('nhuNailsUser');
    
    // Chuy·ªÉn h∆∞·ªõng v·ªÅ trang ch·ªß
    window.location.href = 'index.html';
});

// Ch·∫°y khi trang load
document.addEventListener('DOMContentLoaded', function() {
    checkLoginStatus();
    
    // Th√™m hi·ªáu ·ª©ng khi hover
    const greeting = document.querySelector('.user-greeting');
    if (greeting) {
        greeting.addEventListener('mouseenter', function() {
            this.querySelector('.welcome-emoji').style.animation = 'wave 0.5s infinite';
        });
        greeting.addEventListener('mouseleave', function() {
            this.querySelector('.welcome-emoji').style.animation = 'wave 2s infinite';
        });
    }
});

